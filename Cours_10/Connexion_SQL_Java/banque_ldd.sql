-- ============================================================
-- Auteur: Anis Boubaker
-- Date de création: 2019-03-24
-- Description:
--  Script de création dela table d'une base de données de banque
--  compte le script de création de table et les triggers qui
--  maintiennent la valeur de la colonne dérivée Compte.solde
-- ============================================================

DROP TABLE Client CASCADE CONSTRAINTS;
DROP TABLE Compte CASCADE CONSTRAINTS;
DROP TABLE Operation CASCADE CONSTRAINTS;

CREATE TABLE Client(
    id_client NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    nom VARCHAR(25) NOT NULL,
    prenom VARCHAR(25) NOT NULL,
    nom_utilisateur VARCHAR(25) NOT NULL UNIQUE,
    mot_passe VARCHAR(25) NOT NULL CHECK(LENGTH(mot_passe)>5)
);

CREATE TABLE Compte(
    num_compte NUMBER PRIMARY KEY,
    solde NUMBER(10,2) DEFAULT 0 NOT NULL,
    id_client NUMBER NOT NULL REFERENCES Client(id_client)
);

CREATE TABLE Operation(
    num_operation NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    num_compte NUMBER NOT NULL REFERENCES Compte,
    date_operation DATE NOT NULL,
    montant NUMBER(10,2)
);


--
-- DECLENCHEUR: TRG_Maj_Solde_Insertion_Operation
-- Table: Operation
-- Type: Après Insertion
-- Description: Met à jour le solde du compte après une nouvelle
--  opération.
--
CREATE OR REPLACE TRIGGER TRG_Maj_Solde_Insertion_Operation
BEFORE INSERT
ON Operation
FOR EACH ROW
BEGIN
    UPDATE Compte
    SET solde = solde + :NEW.montant
    WHERE num_compte = :NEW.num_compte;
END;
/

--
-- DECLENCHEUR: TRG_Maj_Solde_Modification_Operation
-- Table: Operation
-- Type: Après Insertion
-- Description: Met à jour le solde du compte suite à la modification
--  d'une opéartion.
--
CREATE OR REPLACE TRIGGER TRG_Maj_Solde_Modification_Operation
BEFORE UPDATE
ON Operation
FOR EACH ROW
BEGIN
    -- On véréfie que le montant a changé pour ne pas faire une MAJ
    -- inutile (qui pourrait à son tour déclencher des Triggers)
    IF :NEW.montant <> :OLD.montant THEN
        UPDATE Compte
        SET solde = solde + :NEW.montant - :OLD.montant
        WHERE num_compte = :NEW.num_compte;
    END IF;
END;
/


-- JEU DE DONNÉES
INSERT INTO Client VALUES(1, 'Lapierre', 'Marie', 'lapm', 'ytrewq');

INSERT INTO Client VALUES(2, 'Rioux', 'Jean', 'riouxj', '123456');

INSERT INTO Compte VALUES(1001, 500, 1);

INSERT INTO Compte VALUES(1002, 0, 2);

INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1001, CURRENT_DATE, 75.50);
INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1001, CURRENT_DATE, -50);
INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1001, CURRENT_DATE, 300);

INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1002, CURRENT_DATE, 300);
INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1002, CURRENT_DATE, -45.75);
INSERT INTO Operation (num_compte, date_operation, montant)
            VALUES (1002, CURRENT_DATE, 98.50);

commit;
